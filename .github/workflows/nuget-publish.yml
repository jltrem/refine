name: CI Workflow

on:
  push:
    branches: # Run the workflow on pushes to these branches
      - main
    tags:
      - 'v*.*.*' # Publish on new version tags
      - 'gen-v*.*.*'

  pull_request: # Run the workflow on pull requests targeting main
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Debug --no-restore

      - name: Run tests
        run: dotnet test --configuration Debug --no-restore --no-build --logger "trx" --results-directory ./TestResults

      - name: Upload test results
        if: always() # Ensures results are uploaded even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./TestResults/*.trx

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') # Only run for tag pushes
    needs: test # only run if test succeeds

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Determine Project to Publish
        id: determine_project
        run: |
          # Extract project type from tag name
          if [[ "${GITHUB_REF##*/}" == "gen-v"* ]]; then
            echo "project=Refine.Generators" >> $GITHUB_ENV
          else
            echo "project=Refine" >> $GITHUB_ENV
          fi

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Project
        run: dotnet build --configuration Release src/${{ env.project }}/${{ env.project }}.csproj

      - name: Pack Project
        run: dotnet pack src/${{ env.project }}/${{ env.project }}.csproj --configuration Release --output ./packages

      - name: Publish to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./packages/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json